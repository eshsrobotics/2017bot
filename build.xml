<?xml version="1.0" encoding="UTF-8"?>

<project name="FRC Deployment" default="deploy">

        <!--
  The following properties can be defined to override system level
  settings. These should not be touched unless you know what you're
  doing. The primary use is to override the wpilib version when
  working with older robots that can't compile with the latest
  libraries.
  -->

        <!-- By default the system version of WPI is used -->
        <!-- <property name="version" value=""/> -->

        <!-- By default the system team number is used -->
        <!-- <property name="team-number" value=""/> -->

        <!-- By default the target is set to 10.TE.AM.2 -->
        <!-- <property name="target" value=""/> -->

        <!-- Any other property in build.properties can also be overridden. -->

        <property file="${user.home}/wpilib/wpilib.properties"/>
        <property file="build.properties"/>
        <property file="${user.home}/wpilib/java/${version}/ant/build.properties"/>

        <import file="${wpilib.ant.dir}/build.xml"/>

        <property name="classpath" value="lib/TalonSRXLibJava.jar:${lib.path}" />

        <!--
            Create a new command-line target that must be built
            independently.
        -->
        <target name="create_command_line_jar">
                <jar destfile="${basedir}/bin/TerminalTest.jar"
                     update="true">
                        <manifest>
                                <attribute name="Main-Class" value="org.usfirst.frc.team1759.terminal.TerminalTest"/>
                                <attribute name="Class-Path" value="."/>
                        </manifest>
                        <!--
                            bin/**/*.class are Eclipse's build artifacts.
                            build/**/*.class are Gradle's.

                            It doesn't matter which set we include as long as
                            org/usfirst/frc/team1759/terminal/TerminalTest.class
                            ends up in the JAR file.  Thanks to the
                            update="true" attribute for the jar task, newer
                            class files will overwrite older ones, so it won't
                            matter which build environment you use.
                        -->
                        <fileset dir="${basedir}/bin"                includes="**/*.class"/>
                        <fileset dir="${basedir}/build/classes/main" includes="**/*.class"/>
                </jar>
        </target>

</project>
